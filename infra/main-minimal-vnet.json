{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.37.4.10188",
      "templateHash": "8624198603498904550"
    }
  },
  "parameters": {
    "environmentName": {
      "type": "string",
      "defaultValue": "dev",
      "metadata": {
        "description": "Environment name (dev, test, prod)"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "projectName": {
      "type": "string",
      "defaultValue": "hsq-forms",
      "metadata": {
        "description": "Project name used in resource naming"
      }
    },
    "dbAdminUsername": {
      "type": "securestring",
      "metadata": {
        "description": "Database administrator username"
      }
    },
    "dbAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Database administrator password"
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": "Storage account type"
      }
    }
  },
  "variables": {
    "shortToken": "[take(uniqueString(resourceGroup().id, deployment().name), 8)]",
    "tags": {
      "Environment": "[parameters('environmentName')]",
      "Project": "[parameters('projectName')]",
      "ManagedBy": "Bicep"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2023-04-01",
      "name": "[format('{0}-vnet-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "container-apps-subnet",
            "properties": {
              "addressPrefix": "10.0.1.0/24",
              "delegations": [
                {
                  "name": "Microsoft.App.environments",
                  "properties": {
                    "serviceName": "Microsoft.App/environments"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2023-09-01",
      "name": "[format('{0}-logs-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": 30
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[format('{0}-insights-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', format('{0}-logs-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken')))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', format('{0}-logs-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken')))]"
      ]
    },
    {
      "type": "Microsoft.DBforPostgreSQL/flexibleServers",
      "apiVersion": "2023-06-01-preview",
      "name": "[format('{0}-db-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "sku": {
        "name": "Standard_B1ms",
        "tier": "Burstable"
      },
      "properties": {
        "administratorLogin": "[parameters('dbAdminUsername')]",
        "administratorLoginPassword": "[parameters('dbAdminPassword')]",
        "version": "15",
        "storage": {
          "storageSizeGB": 32
        },
        "backup": {
          "backupRetentionDays": 7,
          "geoRedundantBackup": "Disabled"
        },
        "highAvailability": {
          "mode": "Disabled"
        },
        "network": {
          "publicNetworkAccess": "Enabled"
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}st{1}{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "sku": {
        "name": "[parameters('storageAccountType')]"
      },
      "kind": "StorageV2",
      "properties": {
        "publicNetworkAccess": "Disabled",
        "accessTier": "Hot",
        "allowBlobPublicAccess": false,
        "minimumTlsVersion": "TLS1_2",
        "supportsHttpsTrafficOnly": true,
        "networkAcls": {
          "defaultAction": "Deny",
          "bypass": "AzureServices"
        }
      }
    },
    {
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2023-07-01",
      "name": "[format('{0}cr{1}{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "sku": {
        "name": "Premium"
      },
      "properties": {
        "publicNetworkAccess": "Disabled",
        "adminUserEnabled": true,
        "networkRuleSet": {
          "defaultAction": "Deny"
        }
      }
    },
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2023-01-31",
      "name": "[format('{0}-identity-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]"
    },
    {
      "type": "Microsoft.App/managedEnvironments",
      "apiVersion": "2023-05-01",
      "name": "[format('{0}-env-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "vnetConfiguration": {
          "infrastructureSubnetId": "[reference(resourceId('Microsoft.Network/virtualNetworks', format('{0}-vnet-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken'))), '2023-04-01').subnets[0].id]",
          "internal": true
        },
        "appLogsConfiguration": {
          "destination": "log-analytics",
          "logAnalyticsConfiguration": {
            "customerId": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', format('{0}-logs-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken'))), '2023-09-01').customerId]",
            "sharedKey": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces', format('{0}-logs-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken'))), '2023-09-01').primarySharedKey]"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', format('{0}-logs-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken')))]",
        "[resourceId('Microsoft.Network/virtualNetworks', format('{0}-vnet-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken')))]"
      ]
    },
    {
      "type": "Microsoft.App/containerApps",
      "apiVersion": "2023-05-01",
      "name": "[format('{0}-api-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken'))]",
      "location": "[parameters('location')]",
      "tags": "[union(variables('tags'), createObject('azd-service-name', 'api'))]",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken'))))]": {}
        }
      },
      "properties": {
        "managedEnvironmentId": "[resourceId('Microsoft.App/managedEnvironments', format('{0}-env-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken')))]",
        "configuration": {
          "activeRevisionsMode": "Single",
          "ingress": {
            "external": false,
            "targetPort": 8000,
            "transport": "http",
            "allowInsecure": false
          },
          "secrets": [
            {
              "name": "database-url",
              "value": "[format('postgresql://{0}:{1}@{2}:5432/hsq_forms', parameters('dbAdminUsername'), parameters('dbAdminPassword'), reference(resourceId('Microsoft.DBforPostgreSQL/flexibleServers', format('{0}-db-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken'))), '2023-06-01-preview').fullyQualifiedDomainName)]"
            },
            {
              "name": "storage-account-key",
              "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', format('{0}st{1}{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken'))), '2023-01-01').keys[0].value]"
            }
          ],
          "registries": [
            {
              "server": "[reference(resourceId('Microsoft.ContainerRegistry/registries', format('{0}cr{1}{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken'))), '2023-07-01').loginServer]",
              "username": "[listCredentials(resourceId('Microsoft.ContainerRegistry/registries', format('{0}cr{1}{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken'))), '2023-07-01').username]",
              "passwordSecretRef": "registry-password"
            }
          ]
        },
        "template": {
          "containers": [
            {
              "image": "mcr.microsoft.com/azuredocs/containerapps-helloworld:latest",
              "name": "hsq-forms-api",
              "env": [
                {
                  "name": "DATABASE_URL",
                  "secretRef": "database-url"
                },
                {
                  "name": "AZURE_STORAGE_ACCOUNT_NAME",
                  "value": "[format('{0}st{1}{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken'))]"
                },
                {
                  "name": "AZURE_STORAGE_ACCOUNT_KEY",
                  "secretRef": "storage-account-key"
                },
                {
                  "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                  "value": "[reference(resourceId('Microsoft.Insights/components', format('{0}-insights-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken'))), '2020-02-02').ConnectionString]"
                },
                {
                  "name": "ENVIRONMENT",
                  "value": "[parameters('environmentName')]"
                }
              ],
              "resources": {
                "cpu": "[json('0.5')]",
                "memory": "1Gi"
              }
            }
          ],
          "scale": {
            "minReplicas": 1,
            "maxReplicas": 3,
            "rules": [
              {
                "name": "http-rule",
                "http": {
                  "metadata": {
                    "concurrentRequests": "10"
                  }
                }
              }
            ]
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', format('{0}-insights-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken')))]",
        "[resourceId('Microsoft.App/managedEnvironments', format('{0}-env-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken')))]",
        "[resourceId('Microsoft.ContainerRegistry/registries', format('{0}cr{1}{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken')))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken')))]",
        "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', format('{0}-db-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken')))]",
        "[resourceId('Microsoft.Storage/storageAccounts', format('{0}st{1}{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken')))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', format('{0}st{1}{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken')))]",
      "name": "[guid(resourceId('Microsoft.Storage/storageAccounts', format('{0}st{1}{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken'))), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken'))), 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken'))), '2023-01-31').principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken')))]",
        "[resourceId('Microsoft.Storage/storageAccounts', format('{0}st{1}{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken')))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', format('{0}cr{1}{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken')))]",
      "name": "[guid(resourceId('Microsoft.ContainerRegistry/registries', format('{0}cr{1}{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken'))), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken'))), '7f951dda-4ed3-4680-a7ca-43fe172d538d')]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '7f951dda-4ed3-4680-a7ca-43fe172d538d')]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken'))), '2023-01-31').principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', format('{0}cr{1}{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken')))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken')))]"
      ]
    }
  ],
  "outputs": {
    "containerAppEndpoint": {
      "type": "string",
      "value": "[format('https://{0}', reference(resourceId('Microsoft.App/containerApps', format('{0}-api-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken'))), '2023-05-01').configuration.ingress.fqdn)]"
    },
    "containerRegistryLoginServer": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ContainerRegistry/registries', format('{0}cr{1}{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken'))), '2023-07-01').loginServer]"
    },
    "storageAccountName": {
      "type": "string",
      "value": "[format('{0}st{1}{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken'))]"
    },
    "databaseHost": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.DBforPostgreSQL/flexibleServers', format('{0}-db-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken'))), '2023-06-01-preview').fullyQualifiedDomainName]"
    },
    "applicationInsightsConnectionString": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Insights/components', format('{0}-insights-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken'))), '2020-02-02').ConnectionString]"
    },
    "managedIdentityClientId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken'))), '2023-01-31').clientId]"
    },
    "virtualNetworkId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/virtualNetworks', format('{0}-vnet-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken')))]"
    },
    "containerAppsEnvironmentId": {
      "type": "string",
      "value": "[resourceId('Microsoft.App/managedEnvironments', format('{0}-env-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken')))]"
    }
  }
}