{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.37.4.10188",
      "templateHash": "8016933115811533701"
    }
  },
  "parameters": {
    "environmentName": {
      "type": "string",
      "defaultValue": "dev",
      "metadata": {
        "description": "Environment name (dev/prod)"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "projectName": {
      "type": "string",
      "defaultValue": "hsq-forms",
      "metadata": {
        "description": "Project name prefix"
      }
    },
    "dbAdminUsername": {
      "type": "string",
      "metadata": {
        "description": "Database administrator username"
      }
    },
    "dbAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Database administrator password"
      }
    },
    "containerAppMinReplicas": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "Container app minimum replicas"
      }
    },
    "containerAppMaxReplicas": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "Container app maximum replicas"
      }
    }
  },
  "variables": {
    "resourceToken": "[toLower(uniqueString(subscription().id, resourceGroup().id, parameters('environmentName')))]",
    "shortToken": "[substring(variables('resourceToken'), 0, 8)]",
    "tags": {
      "Environment": "[parameters('environmentName')]",
      "Project": "[parameters('projectName')]",
      "ManagedBy": "Bicep",
      "azd-env-name": "[parameters('environmentName')]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}/{1}/{2}', format('hsq{0}st{1}', parameters('environmentName'), variables('shortToken')), 'default', 'forms')]",
      "properties": {
        "publicAccess": "None"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', format('hsq{0}st{1}', parameters('environmentName'), variables('shortToken')), 'default')]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}/{1}/{2}', format('hsq{0}st{1}', parameters('environmentName'), variables('shortToken')), 'default', 'uploads')]",
      "properties": {
        "publicAccess": "None"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', format('hsq{0}st{1}', parameters('environmentName'), variables('shortToken')), 'default')]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}/{1}', format('hsq{0}st{1}', parameters('environmentName'), variables('shortToken')), 'default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', format('hsq{0}st{1}', parameters('environmentName'), variables('shortToken')))]"
      ]
    },
    {
      "type": "Microsoft.DBforPostgreSQL/flexibleServers/databases",
      "apiVersion": "2023-03-01-preview",
      "name": "[format('{0}/{1}', format('{0}-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken')), 'hsq_forms')]",
      "dependsOn": [
        "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', format('{0}-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken')))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-01-01",
      "name": "[format('hsq{0}st{1}', parameters('environmentName'), variables('shortToken'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "kind": "StorageV2",
      "sku": {
        "name": "Standard_LRS"
      },
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": false,
        "publicNetworkAccess": "Disabled",
        "encryption": {
          "services": {
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        }
      }
    },
    {
      "type": "Microsoft.DBforPostgreSQL/flexibleServers",
      "apiVersion": "2023-03-01-preview",
      "name": "[format('{0}-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "sku": {
        "name": "Standard_B1ms",
        "tier": "Burstable"
      },
      "properties": {
        "administratorLogin": "[parameters('dbAdminUsername')]",
        "administratorLoginPassword": "[parameters('dbAdminPassword')]",
        "version": "15",
        "storage": {
          "storageSizeGB": 32,
          "autoGrow": "Enabled"
        },
        "backup": {
          "backupRetentionDays": 7,
          "geoRedundantBackup": "Disabled"
        },
        "highAvailability": {
          "mode": "Disabled"
        }
      }
    },
    {
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2023-07-01",
      "name": "[format('hsq{0}acr{1}', parameters('environmentName'), variables('shortToken'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "sku": {
        "name": "Basic"
      },
      "properties": {
        "adminUserEnabled": true
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2023-09-01",
      "name": "[format('{0}-logs-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": 30
      }
    },
    {
      "type": "Microsoft.App/managedEnvironments",
      "apiVersion": "2023-05-01",
      "name": "[format('{0}-env-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "appLogsConfiguration": {
          "destination": "log-analytics",
          "logAnalyticsConfiguration": {
            "customerId": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', format('{0}-logs-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken'))), '2023-09-01').customerId]",
            "sharedKey": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces', format('{0}-logs-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken'))), '2023-09-01').primarySharedKey]"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', format('{0}-logs-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken')))]"
      ]
    },
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2023-01-31",
      "name": "[format('{0}-identity-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]"
    },
    {
      "type": "Microsoft.App/containerApps",
      "apiVersion": "2023-05-01",
      "name": "[format('{0}-api-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken'))]",
      "location": "[parameters('location')]",
      "tags": "[union(variables('tags'), createObject('azd-service-name', 'api'))]",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken'))))]": {}
        }
      },
      "properties": {
        "managedEnvironmentId": "[resourceId('Microsoft.App/managedEnvironments', format('{0}-env-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken')))]",
        "configuration": {
          "activeRevisionsMode": "Single",
          "ingress": {
            "external": false,
            "targetPort": 8000,
            "transport": "http",
            "allowInsecure": false
          },
          "secrets": [
            {
              "name": "database-url",
              "value": "[format('postgresql://{0}:{1}@{2}:5432/hsq_forms', parameters('dbAdminUsername'), parameters('dbAdminPassword'), reference(resourceId('Microsoft.DBforPostgreSQL/flexibleServers', format('{0}-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken'))), '2023-03-01-preview').fullyQualifiedDomainName)]"
            },
            {
              "name": "storage-account-key",
              "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', format('hsq{0}st{1}', parameters('environmentName'), variables('shortToken'))), '2023-01-01').keys[0].value]"
            },
            {
              "name": "acr-password",
              "value": "[listCredentials(resourceId('Microsoft.ContainerRegistry/registries', format('hsq{0}acr{1}', parameters('environmentName'), variables('shortToken'))), '2023-07-01').passwords[0].value]"
            }
          ]
        },
        "template": {
          "containers": [
            {
              "name": "hsq-forms-api",
              "image": "mcr.microsoft.com/azuredocs/containerapps-helloworld:latest",
              "resources": {
                "cpu": "[json('0.5')]",
                "memory": "1Gi"
              },
              "env": [
                {
                  "name": "APP_ENVIRONMENT",
                  "value": "[parameters('environmentName')]"
                },
                {
                  "name": "DATABASE_URL",
                  "secretRef": "database-url"
                },
                {
                  "name": "AZURE_STORAGE_ACCOUNT_NAME",
                  "value": "[format('hsq{0}st{1}', parameters('environmentName'), variables('shortToken'))]"
                },
                {
                  "name": "AZURE_STORAGE_ACCOUNT_KEY",
                  "secretRef": "storage-account-key"
                },
                {
                  "name": "AZURE_STORAGE_CONTAINER_FORMS",
                  "value": "forms"
                },
                {
                  "name": "AZURE_STORAGE_CONTAINER_UPLOADS",
                  "value": "uploads"
                }
              ]
            }
          ],
          "scale": {
            "minReplicas": "[parameters('containerAppMinReplicas')]",
            "maxReplicas": "[parameters('containerAppMaxReplicas')]"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.App/managedEnvironments', format('{0}-env-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken')))]",
        "[resourceId('Microsoft.ContainerRegistry/registries', format('hsq{0}acr{1}', parameters('environmentName'), variables('shortToken')))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken')))]",
        "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', format('{0}-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken')))]",
        "[resourceId('Microsoft.Storage/storageAccounts', format('hsq{0}st{1}', parameters('environmentName'), variables('shortToken')))]"
      ]
    }
  ],
  "outputs": {
    "RESOURCE_GROUP_ID": {
      "type": "string",
      "value": "[resourceGroup().id]"
    },
    "AZURE_CONTAINER_APPS_ENVIRONMENT_ID": {
      "type": "string",
      "value": "[resourceId('Microsoft.App/managedEnvironments', format('{0}-env-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken')))]"
    },
    "SERVICE_API_IDENTITY_PRINCIPAL_ID": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken'))), '2023-01-31').principalId]"
    },
    "SERVICE_API_NAME": {
      "type": "string",
      "value": "[format('{0}-api-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken'))]"
    },
    "SERVICE_API_URI": {
      "type": "string",
      "value": "[format('https://{0}', reference(resourceId('Microsoft.App/containerApps', format('{0}-api-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken'))), '2023-05-01').configuration.ingress.fqdn)]"
    },
    "AZURE_CONTAINER_REGISTRY_ENDPOINT": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ContainerRegistry/registries', format('hsq{0}acr{1}', parameters('environmentName'), variables('shortToken'))), '2023-07-01').loginServer]"
    },
    "AZURE_CONTAINER_REGISTRY_NAME": {
      "type": "string",
      "value": "[format('hsq{0}acr{1}', parameters('environmentName'), variables('shortToken'))]"
    },
    "DATABASE_HOST": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.DBforPostgreSQL/flexibleServers', format('{0}-{1}-{2}', parameters('projectName'), parameters('environmentName'), variables('shortToken'))), '2023-03-01-preview').fullyQualifiedDomainName]"
    },
    "STORAGE_ACCOUNT_NAME": {
      "type": "string",
      "value": "[format('hsq{0}st{1}', parameters('environmentName'), variables('shortToken'))]"
    }
  }
}