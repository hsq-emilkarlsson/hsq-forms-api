name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - main
      - staging
      - develop
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main
      - staging
      - develop
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - staging
          - production

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy
    
    # Determine environment from context
    env:
      DEPLOY_ENV: ${{ github.event.inputs.environment || (github.ref == 'refs/heads/main' && 'production') || (github.ref == 'refs/heads/staging' && 'staging') || 'development' }}
      
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install Dependencies
        run: npm ci
      
      - name: Set Environment Variables
        run: |
          echo "Using environment: $DEPLOY_ENV"
          if [[ "$DEPLOY_ENV" == "production" ]]; then
            echo "Using production configuration"
            echo "VITE_API_URL=${{ secrets.VITE_API_URL || secrets.PROD_VITE_API_URL }}" >> $GITHUB_ENV
            echo "VITE_API_KEY=${{ secrets.VITE_API_KEY || secrets.PROD_VITE_API_KEY }}" >> $GITHUB_ENV
            echo "VITE_AZURE_ENABLED=true" >> $GITHUB_ENV
            echo "VITE_AZURE_STORAGE_URL=${{ secrets.VITE_AZURE_STORAGE_URL || secrets.PROD_VITE_AZURE_STORAGE_URL }}" >> $GITHUB_ENV
            echo "VITE_ENABLE_ANALYTICS=true" >> $GITHUB_ENV
            echo "VITE_APPLICATION_INSIGHTS_KEY=${{ secrets.VITE_APPLICATION_INSIGHTS_KEY || secrets.PROD_VITE_APPLICATION_INSIGHTS_KEY }}" >> $GITHUB_ENV
          elif [[ "$DEPLOY_ENV" == "staging" ]]; then
            echo "Using staging configuration"
            echo "VITE_API_URL=${{ secrets.VITE_API_URL || secrets.STAGING_VITE_API_URL }}" >> $GITHUB_ENV
            echo "VITE_API_KEY=${{ secrets.VITE_API_KEY || secrets.STAGING_VITE_API_KEY }}" >> $GITHUB_ENV
            echo "VITE_AZURE_ENABLED=true" >> $GITHUB_ENV
            echo "VITE_AZURE_STORAGE_URL=${{ secrets.VITE_AZURE_STORAGE_URL || secrets.STAGING_VITE_AZURE_STORAGE_URL }}" >> $GITHUB_ENV
            echo "VITE_ENABLE_ANALYTICS=true" >> $GITHUB_ENV
            echo "VITE_APPLICATION_INSIGHTS_KEY=${{ secrets.VITE_APPLICATION_INSIGHTS_KEY || secrets.STAGING_VITE_APPLICATION_INSIGHTS_KEY }}" >> $GITHUB_ENV
          else
            echo "Using development configuration"
            echo "VITE_API_URL=${{ secrets.VITE_API_URL || secrets.DEV_VITE_API_URL }}" >> $GITHUB_ENV
            echo "VITE_API_KEY=${{ secrets.VITE_API_KEY || secrets.DEV_VITE_API_KEY }}" >> $GITHUB_ENV
            echo "VITE_AZURE_ENABLED=false" >> $GITHUB_ENV
            echo "VITE_ENABLE_ANALYTICS=false" >> $GITHUB_ENV
          fi
          echo "VITE_FORM_ID=${{ secrets.VITE_FORM_ID }}" >> $GITHUB_ENV
          echo "VITE_FORM_NAME=${{ secrets.VITE_FORM_NAME }}" >> $GITHUB_ENV
          echo "VITE_FORM_DESCRIPTION=${{ secrets.VITE_FORM_DESCRIPTION }}" >> $GITHUB_ENV
          echo "VITE_ENVIRONMENT=$DEPLOY_ENV" >> $GITHUB_ENV
      
      - name: Build
        run: npm run build
        env:
          VITE_API_URL: ${{ env.VITE_API_URL }}
          VITE_API_KEY: ${{ env.VITE_API_KEY }}
          VITE_FORM_ID: ${{ env.VITE_FORM_ID }}
          VITE_FORM_NAME: ${{ env.VITE_FORM_NAME }}
          VITE_FORM_DESCRIPTION: ${{ env.VITE_FORM_DESCRIPTION }}
          VITE_AZURE_ENABLED: ${{ env.VITE_AZURE_ENABLED }}
          VITE_AZURE_STORAGE_URL: ${{ env.VITE_AZURE_STORAGE_URL }}
          VITE_ENABLE_ANALYTICS: ${{ env.VITE_ENABLE_ANALYTICS }}
          VITE_APPLICATION_INSIGHTS_KEY: ${{ env.VITE_APPLICATION_INSIGHTS_KEY }}
          VITE_ENVIRONMENT: ${{ env.VITE_ENVIRONMENT }}
      
      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for GitHub integrations
          action: "upload"
          app_location: "dist" # Build output directory
          api_location: "" # API source code path - set to empty if not needed
          output_location: "" # Leave empty for SWA to detect

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          action: "close"
