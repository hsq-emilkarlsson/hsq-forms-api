# Production Docker Compose Configuration
# Use this for production deployments

version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.prod
    image: hsq-forms-api:${VERSION:-latest}
    container_name: hsq-forms-api-prod
    restart: unless-stopped
    ports:
      - "${API_PORT:-8000}:8000"
    environment:
      - ENVIRONMENT=production
      - DATABASE_URL=postgresql://${DB_USER:-hsqforms}:${DB_PASSWORD}@db:5432/${DB_NAME:-hsqforms}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - SECRET_KEY=${SECRET_KEY}
      - CORS_ORIGINS=${CORS_ORIGINS:-}
    env_file:
      - .env.production
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - hsq-network
    # Security options
    security_opt:
      - no-new-privileges:true
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    labels:
      - "app=hsq-forms-api"
      - "version=${VERSION:-latest}"
      - "environment=production"

  db:
    image: postgres:15-alpine
    container_name: hsq-forms-db-prod
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${DB_NAME:-hsqforms}
      - POSTGRES_USER=${DB_USER:-hsqforms}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-hsqforms} -d ${DB_NAME:-hsqforms}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - hsq-network
    # Security and resource limits
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'

volumes:
  postgres_data:
    driver: local

networks:
  hsq-network:
    driver: bridge
