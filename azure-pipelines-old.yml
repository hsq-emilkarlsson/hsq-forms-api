# ðŸš€ HSQ Forms API - Complete Azure DevOps Pipeline
# Infrastructure deployment + Application deployment

trigger:
  branches:
    include:
      - main
      - develop

pr:
  branches:
    include:
      - main
      - develop

variables:
  # Docker and Container settings
  imageRepository: 'hsq-forms-api'
  dockerfilePath: 'Dockerfile.prod'
  tag: '$(Build.BuildId)'
  
  # Environment specific settings
  ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/main') }}:
    acrName: 'hsqformsprodacr'
    environment: 'prod'
    subscriptionId: 'HAZE-00B9-APP1066-PROD-Martech-SharedServices'
    resourceGroupName: 'rg-hsq-forms-prod'
  ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/develop') }}:
    acrName: 'hsqformsdevacr'
    environment: 'dev'
    subscriptionId: 'c0b03b12-570f-4442-b337-c9175ad4037f'
    resourceGroupName: 'rg-hsq-forms-dev'

stages:
- stage: Test
  displayName: 'Run Tests'
  jobs:
  - job: TestJob
    displayName: 'Test Application'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.11'
        displayName: 'Use Python 3.11'
    
    - script: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
      displayName: 'Install dependencies'
    
    - script: |
        python -m pytest tests/ -v --tb=short
      displayName: 'Run tests'
      continueOnError: true

- stage: Infrastructure
  displayName: 'Deploy Infrastructure'
  dependsOn: Test
  condition: succeeded()
  jobs:
  - job: DeployInfrastructure
    displayName: 'Deploy Azure Infrastructure'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
    
    - task: AzureCLI@2
      displayName: 'Deploy Bicep Template'
      inputs:
        azureSubscription: 'Azure subscription 1(c0b03b12-570f-4442-b337-c9175ad4037f)'  # Use default subscription connection
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          # Create resource group if it doesn't exist
          az group create --name $(resourceGroupName) --location "West Europe"
          
          # Deploy infrastructure
          az deployment group create \
            --resource-group $(resourceGroupName) \
            --template-file infra/main.bicep \
            --parameters @infra/main.parameters.$(environment).json \
            --parameters dbAdminPassword="$(DB_ADMIN_PASSWORD)"

- stage: BuildAndDeployDev
  displayName: 'Build & Deploy to DEV'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))
  dependsOn: Infrastructure
  jobs:
  - deployment: DeployDev
    displayName: 'Deploy to DEV Environment'
    environment: 'dev'
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
          
          - task: Docker@2
            displayName: 'Build and push image to ACR'
            inputs:
              command: 'buildAndPush'
              repository: '$(imageRepository)'
              dockerfile: '$(dockerfilePath)'
              containerRegistry: 'hsqformsdevacr'
              tags: |
                $(tag)
                latest
          
          - task: AzureCLI@2
            displayName: 'Update Container App'
            inputs:
              azureSubscription: 'AzureServiceConnection-dev'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                # Get Container App name
                CONTAINER_APP_NAME=$(az containerapp list \
                  --resource-group $(resourceGroupName) \
                  --query "[?contains(name, 'hsq-forms-api')].name" \
                  --output tsv)
                
                # Update container app with new image
                az containerapp update \
                  --name $CONTAINER_APP_NAME \
                  --resource-group $(resourceGroupName) \
                  --image $(acrName).azurecr.io/$(imageRepository):$(tag)

- stage: BuildAndDeployProd
  displayName: 'Build & Deploy to PROD'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  dependsOn: Infrastructure
  jobs:
  - deployment: DeployProd
    displayName: 'Deploy to PROD Environment'
    environment: 'prod'
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
          
          - task: Docker@2
            displayName: 'Build and push image to ACR'
            inputs:
              command: 'buildAndPush'
              repository: '$(imageRepository)'
              dockerfile: '$(dockerfilePath)'
              containerRegistry: 'hsqformsprodacr'
              tags: |
                $(tag)
                latest
          
          - task: AzureCLI@2
            displayName: 'Update Container App'
            inputs:
              azureSubscription: 'AzureServiceConnection-prod'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                # Get Container App name
                CONTAINER_APP_NAME=$(az containerapp list \
                  --resource-group $(resourceGroupName) \
                  --query "[?contains(name, 'hsq-forms-api')].name" \
                  --output tsv)
                
                # Update container app with new image
                az containerapp update \
                  --name $CONTAINER_APP_NAME \
                  --resource-group $(resourceGroupName) \
                  --image $(acrName).azurecr.io/$(imageRepository):$(tag)
