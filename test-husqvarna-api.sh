#!/bin/bash

# Direct Husqvarna API Tests - Compare OLD vs NEW caseOriginCode
# These commands test the actual Husqvarna API endpoints

echo "üéØ Direct Husqvarna API Tests"
echo "============================="
echo ""

# Set variables
ACCOUNT_ID="8cc804f3-0de1-e911-a812-000d3a252d60"
CUSTOMER_NUMBER="1411768"
CUSTOMER_CODE="DOJ"
API_KEY="3d9c4d8a3c5c47f1a2a0ec096496a786"
BASE_URL="https://api-qa.integration.husqvarnagroup.com/hqw170/v1"

echo "üìä Testing OLD vs NEW caseOriginCode"
echo "------------------------------------"
echo ""

# Test OLD caseOriginCode (WEB)
echo "üî¥ Testing OLD caseOriginCode: WEB"
echo "Payload: {accountId: $ACCOUNT_ID, customerNumber: $CUSTOMER_NUMBER, customerCode: $CUSTOMER_CODE, caseOriginCode: 'WEB'}"
echo ""

OLD_RESPONSE=$(timeout 15s curl -s -X POST "$BASE_URL/cases" \
  -H "Ocp-Apim-Subscription-Key: $API_KEY" \
  -H "Content-Type: application/json" \
  -d "{
    \"accountId\": \"$ACCOUNT_ID\",
    \"customerNumber\": \"$CUSTOMER_NUMBER\",
    \"customerCode\": \"$CUSTOMER_CODE\",
    \"caseOriginCode\": \"WEB\",
    \"description\": \"TEST - OLD caseOriginCode (WEB) - Should route to default queue\"
  }" 2>/dev/null || echo "Request timed out")

echo "Response: $OLD_RESPONSE"
echo ""

# Test NEW caseOriginCode (115000008)
echo "üü¢ Testing NEW caseOriginCode: 115000008"
echo "Payload: {accountId: $ACCOUNT_ID, customerNumber: $CUSTOMER_NUMBER, customerCode: $CUSTOMER_CODE, caseOriginCode: '115000008'}"
echo ""

NEW_RESPONSE=$(timeout 15s curl -s -X POST "$BASE_URL/cases" \
  -H "Ocp-Apim-Subscription-Key: $API_KEY" \
  -H "Content-Type: application/json" \
  -d "{
    \"accountId\": \"$ACCOUNT_ID\",
    \"customerNumber\": \"$CUSTOMER_NUMBER\",
    \"customerCode\": \"$CUSTOMER_CODE\",
    \"caseOriginCode\": \"115000008\",
    \"description\": \"TEST - NEW caseOriginCode (115000008) - Should route to B2B support queue\"
  }" 2>/dev/null || echo "Request timed out")

echo "Response: $NEW_RESPONSE"
echo ""

# Extract case IDs if successful
OLD_CASE_ID=""
NEW_CASE_ID=""

if [[ "$OLD_RESPONSE" == *"caseId"* ]]; then
  OLD_CASE_ID=$(echo "$OLD_RESPONSE" | grep -o '"caseId":"[^"]*"' | cut -d'"' -f4)
fi

if [[ "$NEW_RESPONSE" == *"caseId"* ]]; then
  NEW_CASE_ID=$(echo "$NEW_RESPONSE" | grep -o '"caseId":"[^"]*"' | cut -d'"' -f4)
fi

# Summary
echo "üìã Results Summary"
echo "=================="
echo ""
echo "OLD caseOriginCode (WEB):"
if [[ -n "$OLD_CASE_ID" ]]; then
  echo "  ‚úÖ Case created successfully"
  echo "  üìù Case ID: $OLD_CASE_ID"
else
  echo "  ‚ùå Failed or timed out"
fi
echo ""

echo "NEW caseOriginCode (115000008):"
if [[ -n "$NEW_CASE_ID" ]]; then
  echo "  ‚úÖ Case created successfully"
  echo "  üìù Case ID: $NEW_CASE_ID"
else
  echo "  ‚ùå Failed or timed out"
fi
echo ""

echo "üéØ Validation Points:"
echo "‚Ä¢ Both codes should create cases successfully"
echo "‚Ä¢ The NEW code (115000008) should route to B2B support queue in CRM"
echo "‚Ä¢ Monitor CRM system to verify proper routing"
echo "‚Ä¢ Check case assignment and team routing"
echo ""

if [[ -n "$OLD_CASE_ID" ]] && [[ -n "$NEW_CASE_ID" ]]; then
  echo "‚úÖ Both tests successful - ready for production validation!"
elif [[ -n "$NEW_CASE_ID" ]]; then
  echo "‚úÖ NEW caseOriginCode working - primary objective achieved!"
else
  echo "‚ö†Ô∏è  API may be slow or unavailable - try again later"
fi
