# üöÄ HSQ Forms API - Azure DevOps Pipeline
# Uppdaterad f√∂r att matcha infrastruktur och s√§kerhetskonfiguration

trigger:
  branches:
    include:
      - main
      - develop

pr:
  branches:
    include:
      - main
      - develop

variables:
  # Docker and Container settings
  imageRepository: 'hsq-forms-api'
  dockerfilePath: 'Dockerfile.prod'
  tag: '$(Build.BuildId)'
  
  # Environment specific settings
  ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/main') }}:
    acrName: 'hsqformsprodacr'
    environment: 'prod'
    subscriptionId: 'HAZE-00B9-APP1066-PROD-Martech-SharedServices'
    resourceGroupName: 'rg-hsq-forms-prod'
  ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/develop') }}:
    acrName: 'hsqformsdevacr'
    environment: 'dev'
    subscriptionId: 'HAZE-01AA-APP1066-Dev-Martechlab'
    resourceGroupName: 'rg-hsq-forms-dev'

stages:
- stage: Test
  displayName: 'Run Tests'
  jobs:
  - job: TestJob
    displayName: 'Test Application'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.11'
        displayName: 'Use Python 3.11'
    
    - script: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
      displayName: 'Install dependencies'
    
    - script: |
        export SKIP_API_TESTS=true
        python -m pytest tests/ -v --tb=short
      displayName: 'Run tests'
      continueOnError: true

- stage: Infrastructure
  displayName: 'Deploy Infrastructure'
  dependsOn: Test
  condition: succeeded()
  jobs:
  - job: DeployInfrastructure
    displayName: 'Deploy Azure Infrastructure'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
    
    - task: AzureCLI@2
      displayName: 'Check Available Service Connections'
      inputs:
        azureSubscription: 'SCON-HAZE-01AA-APP1066-Dev-Martechlab'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          echo "üîç Checking current Azure context..."
          az account show --output table
          echo ""
          echo "üéØ Target subscription: $(subscriptionId)"
          echo "üèóÔ∏è Target resource group: $(resourceGroupName)"
          echo "üåç Location: West Europe"
        
    - task: AzureResourceManagerTemplateDeployment@3
      displayName: 'Deploy Bicep Template'
      inputs:
        deploymentScope: 'Resource Group'
        azureResourceManagerConnection: 'SCON-HAZE-01AA-APP1066-Dev-Martechlab'
        subscriptionId: 'c0b03b12-570f-4442-b337-c9175ad4037f'
        action: 'Create Or Update Resource Group'
        resourceGroupName: '$(resourceGroupName)'
        location: 'West Europe'
        templateLocation: 'Linked artifact'
        csmFile: 'infra/main-minimal.bicep'
        csmParametersFile: 'infra/main-minimal.parameters.dev.json'
        overrideParameters: ''
        deploymentMode: 'Incremental'
        deploymentName: 'hsq-forms-$(environment)-$(Build.BuildNumber)'
        
    - task: AzureCLI@2
      displayName: 'List Deployed Resources'
      inputs:
        azureSubscription: 'SCON-HAZE-01AA-APP1066-Dev-Martechlab'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          echo "‚úÖ Infrastructure deployment completed successfully!"
          echo "üìã Checking deployed resources..."
          az resource list --resource-group $(resourceGroupName) --output table

- stage: BuildAndDeployDev
  displayName: 'Build & Deploy to DEV'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))
  dependsOn: Infrastructure
  jobs:
  - job: DeployDev
    displayName: 'Deploy to DEV Environment'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
    
    - script: |
        echo "üöÄ Starting DEV deployment..."
        echo "ACR: $(acrName).azurecr.io"
        echo "Image: $(imageRepository):$(tag)"
        echo "Resource Group: $(resourceGroupName)"
      displayName: 'Deployment Info'
    
    - script: |
        echo "‚úÖ DEV infrastructure should be deployed!"
        echo "üìã Next: Configure ACR service connection for Docker push"
        echo "üîó ACR Name: $(acrName)"
        echo "üìç Resource Group: $(resourceGroupName)"
        echo ""
        echo "üéØ Manual steps needed:"
        echo "1. Create ACR service connection: $(acrName)"
        echo "2. Add Docker build/push tasks"
        echo "3. Configure Container App deployment"
      displayName: 'DEV Deployment Status'

- stage: BuildAndDeployProd
  displayName: 'Build & Deploy to PROD'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  dependsOn: Infrastructure
  jobs:
  - job: DeployProd
    displayName: 'Deploy to PROD Environment'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
    
    - script: |
        echo "üöÄ Starting PROD deployment..."
        echo "ACR: $(acrName).azurecr.io"
        echo "Image: $(imageRepository):$(tag)"
        echo "Resource Group: $(resourceGroupName)"
      displayName: 'Deployment Info'
