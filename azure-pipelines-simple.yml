# üöÄ HSQ Forms API - Simplified Azure DevOps Pipeline
# Anv√§nder befintlig subscription connection f√∂r att komma ig√•ng snabbt

trigger:
  branches:
    include:
      - main
      - develop

pr:
  branches:
    include:
      - main
      - develop

variables:
  # Docker and Container settings
  imageRepository: 'hsq-forms-api'
  dockerfilePath: 'Dockerfile.prod'
  tag: '$(Build.BuildId)'
  
  # Environment specific settings
  ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/main') }}:
    acrName: 'hsqformsprodacr'
    environment: 'prod'
    subscriptionId: 'HAZE-00B9-APP1066-PROD-Martech-SharedServices'
    resourceGroupName: 'rg-hsq-forms-prod'
  ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/develop') }}:
    acrName: 'hsqformsdevacr'
    environment: 'dev'
    subscriptionId: 'c0b03b12-570f-4442-b337-c9175ad4037f'
    resourceGroupName: 'rg-hsq-forms-dev'

stages:
- stage: Test
  displayName: 'Run Tests'
  jobs:
  - job: TestJob
    displayName: 'Test Application'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.11'
        displayName: 'Use Python 3.11'
    
    - script: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
      displayName: 'Install dependencies'
    
    - script: |
        python -m pytest tests/ -v --tb=short
      displayName: 'Run tests'
      continueOnError: true

- stage: ManualDeploymentGuide
  displayName: 'Manual Deployment Guide'
  dependsOn: Test
  condition: succeeded()
  jobs:
  - job: DeploymentInstructions
    displayName: 'Show Deployment Commands'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
    
    - script: |
        echo "üéØ DEPLOYMENT INSTRUCTIONS"
        echo "=========================="
        echo ""
        echo "‚úÖ Tests passed! Ready for manual Azure deployment."
        echo ""
        echo "üèóÔ∏è STEP 1: Create Infrastructure"
        echo "--------------------------------"
        echo "Run these commands in Azure Cloud Shell or local Azure CLI:"
        echo ""
        echo "# Create resource group"
        echo "az group create --name $(resourceGroupName) --location 'West Europe'"
        echo ""
        echo "# Deploy infrastructure"
        echo "az deployment group create "
        echo "  --resource-group $(resourceGroupName) "
        echo "  --template-file infra/main.bicep "
        echo "  --parameters @infra/main.parameters.$(environment).json "
        echo "  --parameters dbAdminPassword='YOUR_SECURE_PASSWORD'"
        echo ""
        echo "üê≥ STEP 2: Build and Deploy Container"
        echo "------------------------------------"
        echo "# Build Docker image"
        echo "docker build -t $(acrName).azurecr.io/$(imageRepository):$(tag) -f $(dockerfilePath) ."
        echo ""
        echo "# Login to ACR"
        echo "az acr login --name $(acrName)"
        echo ""
        echo "# Push image"
        echo "docker push $(acrName).azurecr.io/$(imageRepository):$(tag)"
        echo ""
        echo "# Update Container App"
        echo "az containerapp update "
        echo "  --name hsq-forms-api-$(environment) "
        echo "  --resource-group $(resourceGroupName) "
        echo "  --image $(acrName).azurecr.io/$(imageRepository):$(tag)"
        echo ""
        echo "üîó Expected Resources in $(resourceGroupName):"
        echo "- Container Registry: $(acrName).azurecr.io"
        echo "- PostgreSQL Database: hsq-forms-$(environment)-db"
        echo "- Container App: hsq-forms-api-$(environment)"
        echo "- Storage Account: hsqforms$(environment)..."
        echo ""
        echo "‚úÖ After deployment, your API will be available at:"
        echo "https://hsq-forms-api-$(environment)-{random}.{region}.azurecontainerapps.io"
      displayName: 'Deployment Instructions'
# Simplified version to get infrastructure deployed quickly

trigger:
  branches:
    include:
      - develop

variables:
  # Basic settings
  resourceGroupName: 'rg-hsq-forms-dev'
  location: 'West Europe'
  environment: 'dev'

stages:
- stage: DeployInfrastructure
  displayName: 'Deploy Infrastructure Only'
  jobs:
  - job: DeployInfra
    displayName: 'Deploy Bicep Infrastructure'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
    
    - task: AzureResourceManagerTemplateDeployment@3
      displayName: 'Deploy Infrastructure'
      inputs:
        deploymentScope: 'Resource Group'
        azureResourceManagerConnection: 'Azure subscription 1(c0b03b12-570f-4442-b337-c9175ad4037f)'
        subscriptionId: 'c0b03b12-570f-4442-b337-c9175ad4037f'
        action: 'Create Or Update Resource Group'
        resourceGroupName: '$(resourceGroupName)'
        location: '$(location)'
        templateLocation: 'Linked artifact'
        csmFile: 'infra/main.bicep'
        csmParametersFile: 'infra/main.parameters.dev.json'
        overrideParameters: '-dbAdminPassword "$(DB_ADMIN_PASSWORD)"'
        deploymentMode: 'Incremental'
        
    - script: |
        echo "Infrastructure deployed successfully!"
        echo "Resource Group: $(resourceGroupName)"
        echo "Check Azure Portal for created resources"
      displayName: 'Deployment Complete'
